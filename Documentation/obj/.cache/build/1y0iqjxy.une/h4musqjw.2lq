<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class TypeExtensions
   | TirUtilities </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class TypeExtensions
   | TirUtilities ">
    <meta name="generator" content="docfx 2.56.6.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions">
  
  
  <h1 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions" class="text-break">Class TypeExtensions
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Type method extensions.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></div>
    <div class="level1"><span class="xref">TypeExtensions</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="TirUtilities.External.OdinSerializer.Utilities.html">TirUtilities.External.OdinSerializer.Utilities</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class TypeExtensions</code></pre>
  </div>
  <h3 id="fields">Fields
  </h3>
  
  
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_TypeNameAlternatives" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.TypeNameAlternatives">TypeNameAlternatives</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Type name alias lookup.
TypeNameAlternatives[&quot;Single&quot;] will give you &quot;float&quot;, &quot;UInt16&quot; will give you &quot;ushort&quot;, &quot;Boolean[]&quot; will give you &quot;bool[]&quot; etc..</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static readonly Dictionary&lt;string, string&gt; TypeNameAlternatives</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.dictionary-2">Dictionary</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a>, <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_System_Reflection_MethodBase_System_Type___" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy(System.Reflection.MethodBase,System.Type[])">AreGenericConstraintsSatisfiedBy(MethodBase, Type[])</h4>
  <div class="markdown level1 summary"><p>Checks whether an array of types satisfy the constraints of a given generic method definition.</p>
<p>If this method returns true, the given parameters can be safely used with <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo.makegenericmethod#System_Reflection_MethodInfo_MakeGenericMethod_System_Type___">MakeGenericMethod(Type[])</a> with the given generic method definition.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool AreGenericConstraintsSatisfiedBy(this MethodBase genericMethod, params Type[] parameters)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodbase">MethodBase</a></td>
        <td><span class="parametername">genericMethod</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">parameters</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The parameters to check validity for.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception">ArgumentNullException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="4">genericType is null
or
types is null</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The genericMethod parameter must be a generic method definition.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_System_Type_System_Type___" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy(System.Type,System.Type[])">AreGenericConstraintsSatisfiedBy(Type, Type[])</h4>
  <div class="markdown level1 summary"><p>Checks whether an array of types satisfy the constraints of a given generic type definition.</p>
<p>If this method returns true, the given parameters can be safely used with <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type.makegenerictype#System_Type_MakeGenericType_System_Type___">MakeGenericType(Type[])</a> with the given generic type definition.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool AreGenericConstraintsSatisfiedBy(this Type genericType, params Type[] parameters)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">genericType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The generic type definition to check.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">parameters</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The parameters to check validity for.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception">ArgumentNullException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="4">genericType is null
or
types is null</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The genericType parameter must be a generic type definition.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_AreGenericConstraintsSatisfiedBy_System_Type___System_Type___" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.AreGenericConstraintsSatisfiedBy(System.Type[],System.Type[])">AreGenericConstraintsSatisfiedBy(Type[], Type[])</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool AreGenericConstraintsSatisfiedBy(Type[] definitions, Type[] parameters)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">definitions</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">parameters</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GenericArgumentsContainsTypes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GenericArgumentsContainsTypes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GenericArgumentsContainsTypes_System_Type_System_Type___" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GenericArgumentsContainsTypes(System.Type,System.Type[])">GenericArgumentsContainsTypes(Type, Type[])</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a generic type contains the specified generic argument constraints.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool GenericArgumentsContainsTypes(this Type type, params Type[] types)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">types</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The generic argument types.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GenericParameterIsFulfilledBy_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GenericParameterIsFulfilledBy*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GenericParameterIsFulfilledBy_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GenericParameterIsFulfilledBy(System.Type,System.Type)">GenericParameterIsFulfilledBy(Type, Type)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool GenericParameterIsFulfilledBy(this Type genericParameterDefinition, Type parameterType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">genericParameterDefinition</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">parameterType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers_System_Type_System_Reflection_BindingFlags_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers(System.Type,System.Reflection.BindingFlags)">GetAllMembers(Type, BindingFlags)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets all members from a given type, including members from all base types if the <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.bindingflags#System_Reflection_BindingFlags_DeclaredOnly">DeclaredOnly</a> flag isn&apos;t set.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;MemberInfo&gt; GetAllMembers(this Type type, BindingFlags flags = BindingFlags.Default)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.bindingflags">BindingFlags</a></td>
        <td><span class="parametername">flags</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers_System_Type_System_String_System_Reflection_BindingFlags_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers(System.Type,System.String,System.Reflection.BindingFlags)">GetAllMembers(Type, String, BindingFlags)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets all members from a given type, including members from all base types.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;MemberInfo&gt; GetAllMembers(this Type type, string name, BindingFlags flags = BindingFlags.Default)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.bindingflags">BindingFlags</a></td>
        <td><span class="parametername">flags</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAllMembers__1_System_Type_System_Reflection_BindingFlags_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAllMembers``1(System.Type,System.Reflection.BindingFlags)">GetAllMembers&lt;T&gt;(Type, BindingFlags)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets all members of a specific type from a type, including members from all base types, if the <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.bindingflags#System_Reflection_BindingFlags_DeclaredOnly">DeclaredOnly</a> flag isn&apos;t set.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;T&gt; GetAllMembers&lt;T&gt;(this Type type, BindingFlags flags = BindingFlags.Default)
    where T : MemberInfo</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.bindingflags">BindingFlags</a></td>
        <td><span class="parametername">flags</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericClass_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericClass*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericClass_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericClass(System.Type,System.Type)">GetArgumentsOfInheritedOpenGenericClass(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the generic arguments of an inherited open generic class.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type[] GetArgumentsOfInheritedOpenGenericClass(this Type candidateType, Type openGenericType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the open generic class.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericInterface_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericInterface*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericInterface_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericInterface(System.Type,System.Type)">GetArgumentsOfInheritedOpenGenericInterface(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the generic arguments of an inherited open generic interface.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type[] GetArgumentsOfInheritedOpenGenericInterface(this Type candidateType, Type openGenericInterfaceType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericInterfaceType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the open generic interface.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetArgumentsOfInheritedOpenGenericType_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetArgumentsOfInheritedOpenGenericType(System.Type,System.Type)">GetArgumentsOfInheritedOpenGenericType(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the generic arguments of an inherited open generic class or interface.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type[] GetArgumentsOfInheritedOpenGenericType(this Type candidateType, Type openGenericType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The open generic type to get the arguments of.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAttribute_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAttribute*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetAttribute__1_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetAttribute``1(System.Type,System.Boolean)">GetAttribute&lt;T&gt;(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the first attribute of type T. Returns null in the no attribute of type T was found.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static T GetAttribute&lt;T&gt;(this Type type, bool inherit)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">If true, specifies to also search the ancestors of element for custom attributes.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetBaseClasses_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetBaseClasses*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetBaseClasses_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetBaseClasses(System.Type,System.Boolean)">GetBaseClasses(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns a lazy enumerable of all the base classes of this type</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Type&gt; GetBaseClasses(this Type type, bool includeSelf = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">includeSelf</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetBaseTypes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetBaseTypes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetBaseTypes_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetBaseTypes(System.Type,System.Boolean)">GetBaseTypes(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns a lazy enumerable of all the base types of this type including interfaces and classes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Type&gt; GetBaseTypes(this Type type, bool includeSelf = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">includeSelf</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethod_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethod*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethod_System_Type_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethod(System.Type,System.Type,System.Boolean)">GetCastMethod(Type, Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">If a type can be casted to another type, this provides the method info of the method in charge of converting the type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static MethodInfo GetCastMethod(this Type from, Type to, bool requireImplicitCast = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">from</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">From.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">to</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">To.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">requireImplicitCast</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">if set to <code>true</code> an implicit or explicit operator must be defined on the given type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo">MethodInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethodDelegate_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethodDelegate*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethodDelegate_System_Type_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethodDelegate(System.Type,System.Type,System.Boolean)">GetCastMethodDelegate(Type, Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">If a type can be casted to another type, this provides a function to manually convert the type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Func&lt;object, object&gt; GetCastMethodDelegate(this Type from, Type to, bool requireImplicitCast = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">from</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">From.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">to</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">To.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">requireImplicitCast</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">if set to <code>true</code> an implicit or explicit operator must be defined on the given type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.func-2">Func</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a>, <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethodDelegate_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethodDelegate*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCastMethodDelegate__2_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCastMethodDelegate``2(System.Boolean)">GetCastMethodDelegate&lt;TFrom, TTo&gt;(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">If a type can be casted to another type, this provides a function to manually convert the type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Func&lt;TFrom, TTo&gt; GetCastMethodDelegate&lt;TFrom, TTo&gt;(bool requireImplicitCast = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">requireImplicitCast</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">if set to <code>true</code> an implicit or explicit operator must be defined on the given type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.func-2">Func</a>&lt;TFrom, TTo&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TFrom</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">TTo</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCompilableNiceFullName_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCompilableNiceFullName*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCompilableNiceFullName_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCompilableNiceFullName(System.Type)">GetCompilableNiceFullName(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the full name of the compilable nice.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetCompilableNiceFullName(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCompilableNiceName_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCompilableNiceName*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCompilableNiceName_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCompilableNiceName(System.Type)">GetCompilableNiceName(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the name of the compilable nice.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetCompilableNiceName(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttribute_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttribute*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttribute__1_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttribute``1(System.Type)">GetCustomAttribute&lt;T&gt;(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Returns the first found non-inherited custom attribute of type T on this type
Returns null if none was found</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static T GetCustomAttribute&lt;T&gt;(this Type type)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttribute_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttribute*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttribute__1_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttribute``1(System.Type,System.Boolean)">GetCustomAttribute&lt;T&gt;(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Returns the first found custom attribute of type T on this type
Returns null if none was found</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static T GetCustomAttribute&lt;T&gt;(this Type type, bool inherit)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttributes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttributes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttributes__1_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttributes``1(System.Type)">GetCustomAttributes&lt;T&gt;(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets all attributes of type T.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt;(this Type type)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttributes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttributes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetCustomAttributes__1_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetCustomAttributes``1(System.Type,System.Boolean)">GetCustomAttributes&lt;T&gt;(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets all attributes of type T.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt;(this Type type, bool inherit)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">If true, specifies to also search the ancestors of element for custom attributes.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1">IEnumerable</a>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetEnumBitmask_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetEnumBitmask*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetEnumBitmask_System_Object_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetEnumBitmask(System.Object,System.Type)">GetEnumBitmask(Object, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the enum bitmask in a ulong.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static ulong GetEnumBitmask(object value, Type enumType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></td>
        <td><span class="parametername">value</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">enumType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.uint64">UInt64</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">enumType</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetEqualityComparerDelegate_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetEqualityComparerDelegate*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetEqualityComparerDelegate__1" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetEqualityComparerDelegate``1">GetEqualityComparerDelegate&lt;T&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets an equality comparer delegate used to compare the equality of values of a given type. In order, this will be:</p>
<ol sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="4" sourceendlinenumber="6">
<li sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="4" sourceendlinenumber="4">The == operator, if one is defined on the type.</li>
<li sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="5" sourceendlinenumber="5">A delegate that uses <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.iequatable-1">IEquatable&lt;T&gt;</a>, if the type implements that interface.</li>
<li sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="6" sourceendlinenumber="6">.NET&apos;s own <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.equalitycomparer-1.default#System_Collections_Generic_EqualityComparer_1_Default">Default</a></li>
</ol>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Func&lt;T, T, bool&gt; GetEqualityComparerDelegate&lt;T&gt;()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.func-3">Func</a>&lt;T, T, <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetEqualityComparerDelegate__1_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p>Note that in the special case of the type <see cref="!:UnityEngine.Quaternion"></see>, a special equality comparer is returned that only checks whether all the Quaternion components are equal.</p>
<p>This is because, by default, Quaternion&apos;s equality operator is broken when operating on invalid quaternions; &quot;default(Quaternion) == default(Quaternion)&quot; evaluates to false, and this causes a multitude of problems.</p>
<p>Special delegates are also returned for float and double, that consider float.NaN to be equal to float.NaN, and double.NaN to be equal to double.NaN.</p>
</div>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericBaseType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericBaseType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericBaseType_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericBaseType(System.Type,System.Type)">GetGenericBaseType(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the generic type definition of an open generic base type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type GetGenericBaseType(this Type type, Type baseType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">baseType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericBaseType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericBaseType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericBaseType_System_Type_System_Type_System_Int32__" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericBaseType(System.Type,System.Type,System.Int32@)">GetGenericBaseType(Type, Type, out Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the generic type definition of an open generic base type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type GetGenericBaseType(this Type type, Type baseType, out int depthCount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">baseType</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
        <td><span class="parametername">depthCount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericConstraintsString_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericConstraintsString*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericConstraintsString_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericConstraintsString(System.Type,System.Boolean)">GetGenericConstraintsString(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Not yet documented.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetGenericConstraintsString(this Type type, bool useFullTypeNames = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">useFullTypeNames</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericParameterConstraintsString_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericParameterConstraintsString*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetGenericParameterConstraintsString_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetGenericParameterConstraintsString(System.Type,System.Boolean)">GetGenericParameterConstraintsString(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Formats a string with the specified generic parameter constraints on any given type. Example output: <code>where T : class</code></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetGenericParameterConstraintsString(this Type type, bool useFullTypeNames = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">useFullTypeNames</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetInheritanceDistance_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetInheritanceDistance*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetInheritanceDistance_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetInheritanceDistance(System.Type,System.Type)">GetInheritanceDistance(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the number of base types between given type and baseType.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int GetInheritanceDistance(this Type type, Type baseType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">baseType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetMemberValue_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetMemberValue*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetMemberValue_System_Reflection_MemberInfo_System_Object_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetMemberValue(System.Reflection.MemberInfo,System.Object)">GetMemberValue(MemberInfo, Object)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the value contained in a given <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a>. Currently only <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.fieldinfo">FieldInfo</a> and <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.propertyinfo">PropertyInfo</a> is supported.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static object GetMemberValue(this MemberInfo member, object obj)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a></td>
        <td><span class="parametername">member</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a> to get the value of.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></td>
        <td><span class="parametername">obj</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The instance to get the value from.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The value contained in the given <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a>.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Can&apos;t get the value of the given <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a> type.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetNiceFullName_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetNiceFullName*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetNiceFullName_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetNiceFullName(System.Type)">GetNiceFullName(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns a nicely formatted full name of a type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetNiceFullName(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetNiceName_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetNiceName*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetNiceName_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetNiceName(System.Type)">GetNiceName(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns a nicely formatted name of a type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetNiceName(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethod_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethod*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethod_System_Type_TirUtilities_External_OdinSerializer_Utilities_Operator_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethod(System.Type,TirUtilities.External.OdinSerializer.Utilities.Operator)">GetOperatorMethod(Type, Operator)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the MethodInfo of a specific operator type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static MethodInfo GetOperatorMethod(this Type type, Operator op)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="TirUtilities.External.OdinSerializer.Utilities.Operator.html">Operator</a></td>
        <td><span class="parametername">op</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo">MethodInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethod_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethod*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethod_System_Type_TirUtilities_External_OdinSerializer_Utilities_Operator_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethod(System.Type,TirUtilities.External.OdinSerializer.Utilities.Operator,System.Type,System.Type)">GetOperatorMethod(Type, Operator, Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the MethodInfo of a specific operator kind, with the given left and right operands. This overload is <em>far</em> faster than any of the other GetOperatorMethod implementations, and should be used whenever possible.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static MethodInfo GetOperatorMethod(this Type type, Operator op, Type leftOperand, Type rightOperand)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="TirUtilities.External.OdinSerializer.Utilities.Operator.html">Operator</a></td>
        <td><span class="parametername">op</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">leftOperand</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">rightOperand</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo">MethodInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethods_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethods*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetOperatorMethods_System_Type_TirUtilities_External_OdinSerializer_Utilities_Operator_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetOperatorMethods(System.Type,TirUtilities.External.OdinSerializer.Utilities.Operator)">GetOperatorMethods(Type, Operator)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets the MethodInfo of a specific operator type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static MethodInfo[] GetOperatorMethods(this Type type, Operator op)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="TirUtilities.External.OdinSerializer.Utilities.Operator.html">Operator</a></td>
        <td><span class="parametername">op</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo">MethodInfo</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetReturnType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetReturnType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_GetReturnType_System_Reflection_MemberInfo_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.GetReturnType(System.Reflection.MemberInfo)">GetReturnType(MemberInfo)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">FieldInfo will return the fieldType, propertyInfo the PropertyType, MethodInfo the return type and EventInfo will return the EventHandlerType.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type GetReturnType(this MemberInfo memberInfo)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a></td>
        <td><span class="parametername">memberInfo</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The MemberInfo.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_HasParamaters_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.HasParamaters*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_HasParamaters_System_Reflection_MethodInfo_System_Collections_Generic_IList_System_Type__System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.HasParamaters(System.Reflection.MethodInfo,System.Collections.Generic.IList{System.Type},System.Boolean)">HasParamaters(MethodInfo, IList&lt;Type&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a method has the specified parameter types.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasParamaters(this MethodInfo methodInfo, IList&lt;Type&gt; paramTypes, bool inherit = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.methodinfo">MethodInfo</a></td>
        <td><span class="parametername">methodInfo</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ilist-1">IList</a>&lt;<a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>&gt;</td>
        <td><span class="parametername">paramTypes</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericClass_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericClass*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericClass_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericClass(System.Type,System.Type)">ImplementsOpenGenericClass(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type implements an open generic class such as List&lt;&gt;.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool ImplementsOpenGenericClass(this Type candidateType, Type openGenericType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the open generic interface.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericInterface_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericInterface*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericInterface_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericInterface(System.Type,System.Type)">ImplementsOpenGenericInterface(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type implements an open generic interface such as IList&lt;&gt;.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool ImplementsOpenGenericInterface(this Type candidateType, Type openGenericInterfaceType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericInterfaceType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the open generic interface.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception">ArgumentNullException</a></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type &quot; + openGenericInterfaceType.Name + &quot; is not a generic type definition and an interface.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOpenGenericType_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOpenGenericType(System.Type,System.Type)">ImplementsOpenGenericType(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type implements an open generic interface or class such as IList&lt;&gt; or List&lt;&gt;.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool ImplementsOpenGenericType(this Type candidateType, Type openGenericType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">candidateType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the candidate.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">openGenericType</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of the open generic type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOrInherits_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOrInherits*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_ImplementsOrInherits_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.ImplementsOrInherits(System.Type,System.Type)">ImplementsOrInherits(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type implements or inherits from another type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool ImplementsOrInherits(this Type type, Type to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The type.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">to</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_InheritsFrom_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.InheritsFrom*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_InheritsFrom_System_Type_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.InheritsFrom(System.Type,System.Type)">InheritsFrom(Type, Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type inherits or implements another type. Also include support for open generic base types such as List&lt;&gt;.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool InheritsFrom(this Type type, Type baseType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">baseType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_InheritsFrom_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.InheritsFrom*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_InheritsFrom__1_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.InheritsFrom``1(System.Type)">InheritsFrom&lt;TBase&gt;(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type inherits or implements another type. Also include support for open generic base types such as List&lt;&gt;.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool InheritsFrom&lt;TBase&gt;(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TBase</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsCastableTo_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsCastableTo*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsCastableTo_System_Type_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsCastableTo(System.Type,System.Type,System.Boolean)">IsCastableTo(Type, Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type can be casted to another type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsCastableTo(this Type from, Type to, bool requireImplicitCast = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">from</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">From.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">to</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">To.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">requireImplicitCast</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">if set to <code>true</code> an implicit or explicit operator must be defined on the given type.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsDefined_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsDefined*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsDefined__1_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsDefined``1(System.Type)">IsDefined&lt;T&gt;(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns true if the attribute whose type is specified by the generic argument is defined on this type</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsDefined&lt;T&gt;(this Type type)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsDefined_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsDefined*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsDefined__1_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsDefined``1(System.Type,System.Boolean)">IsDefined&lt;T&gt;(Type, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns true if the attribute whose type is specified by the generic argument is defined on this type</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsDefined&lt;T&gt;(this Type type, bool inherit)
    where T : Attribute</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsFullyConstructedGenericType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsFullyConstructedGenericType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsFullyConstructedGenericType_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsFullyConstructedGenericType(System.Type)">IsFullyConstructedGenericType(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type is a fully constructed generic type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsFullyConstructedGenericType(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsNullableType_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsNullableType*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsNullableType_System_Type_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsNullableType(System.Type)">IsNullableType(Type)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Determines whether a type is nullable by ensuring the type is neither a PrimitiveType, ValueType or an Enum.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsNullableType(this Type type)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsValidIdentifier_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsValidIdentifier*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_IsValidIdentifier_System_String_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.IsValidIdentifier(System.String)">IsValidIdentifier(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Checks whether a given string is a valid CSharp identifier name. This also checks full type names including namespaces.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsValidIdentifier(string identifier)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.string">String</a></td>
        <td><span class="parametername">identifier</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The identifier to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeGetCustomAttributes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeGetCustomAttributes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeGetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeGetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">SafeGetCustomAttributes(Assembly, Type, Boolean)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static object[] SafeGetCustomAttributes(this Assembly assembly, Type type, bool inherit)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.assembly">Assembly</a></td>
        <td><span class="parametername">assembly</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">type</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeGetTypes_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeGetTypes*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeGetTypes_System_Reflection_Assembly_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeGetTypes(System.Reflection.Assembly)">SafeGetTypes(Assembly)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Type[] SafeGetTypes(this Assembly assembly)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.assembly">Assembly</a></td>
        <td><span class="parametername">assembly</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeIsDefined_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeIsDefined*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SafeIsDefined_System_Reflection_Assembly_System_Type_System_Boolean_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SafeIsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">SafeIsDefined(Assembly, Type, Boolean)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool SafeIsDefined(this Assembly assembly, Type attribute, bool inherit)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.assembly">Assembly</a></td>
        <td><span class="parametername">assembly</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">attribute</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><span class="parametername">inherit</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SetMemberValue_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SetMemberValue*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_SetMemberValue_System_Reflection_MemberInfo_System_Object_System_Object_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.SetMemberValue(System.Reflection.MemberInfo,System.Object,System.Object)">SetMemberValue(MemberInfo, Object, Object)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Sets the value of a given MemberInfo. Currently only <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.fieldinfo">FieldInfo</a> and <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.propertyinfo">PropertyInfo</a> is supported.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetMemberValue(this MemberInfo member, object obj, object value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a></td>
        <td><span class="parametername">member</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a> to set the value of.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></td>
        <td><span class="parametername">obj</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The object to set the value on.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></td>
        <td><span class="parametername">value</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The value to set.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="4">Property has no setter
or
Can&apos;t set the value of the given <a class="xref" href="https://docs.microsoft.com/dotnet/api/system.reflection.memberinfo">MemberInfo</a> type.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_TryInferGenericParameters_" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.TryInferGenericParameters*"></a>
  <h4 id="TirUtilities_External_OdinSerializer_Utilities_TypeExtensions_TryInferGenericParameters_System_Type_System_Type____System_Type___" data-uid="TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.TryInferGenericParameters(System.Type,System.Type[]@,System.Type[])">TryInferGenericParameters(Type, out Type[], Type[])</h4>
  <div class="markdown level1 summary"><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Tries to infer a set of valid generic parameters for a generic type definition, given a subset of known parameters.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool TryInferGenericParameters(this Type genericTypeDefinition, out Type[] inferredParams, params Type[] knownParameters)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a></td>
        <td><span class="parametername">genericTypeDefinition</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The generic type definition to attempt to infer parameters for.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">inferredParams</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The inferred parameters, if inferral was successful.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">knownParameters</span></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The known parameters to infer from.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">True if the parameters could be inferred, otherwise, false.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="exceptions">Exceptions</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Condition</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception">ArgumentNullException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="2" sourceendlinenumber="4">genericTypeDefinition is null
or
knownParameters is null</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.argumentexception">ArgumentException</a></td>
        <td><p sourcefile="api/TirUtilities.External.OdinSerializer.Utilities.TypeExtensions.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The genericTypeDefinition parameter must be a generic type definition.</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            TirUtilities
            
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
