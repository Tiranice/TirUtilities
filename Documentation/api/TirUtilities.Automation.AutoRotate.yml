### YamlMime:ManagedReference
items:
- uid: TirUtilities.Automation.AutoRotate
  commentId: T:TirUtilities.Automation.AutoRotate
  id: AutoRotate
  parent: TirUtilities.Automation
  children:
  - TirUtilities.Automation.AutoRotate.IsRotating
  - TirUtilities.Automation.AutoRotate.RotationAxis
  - TirUtilities.Automation.AutoRotate.SetIsRotating(System.Boolean)
  - TirUtilities.Automation.AutoRotate.ToggleRotation
  langs:
  - csharp
  - vb
  name: AutoRotate
  nameWithType: AutoRotate
  fullName: TirUtilities.Automation.AutoRotate
  type: Class
  source:
    id: AutoRotate
    path: ''
    startLine: 5812
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.Automation
  summary: "\nRotates a transform about the given axis over time on fixed update.\n"
  example: []
  syntax:
    content: 'public class AutoRotate : MonoBehaviour'
    content.vb: >-
      Public Class AutoRotate
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TirUtilities.Automation.AutoRotate.ToggleRotation
  commentId: M:TirUtilities.Automation.AutoRotate.ToggleRotation
  id: ToggleRotation
  parent: TirUtilities.Automation.AutoRotate
  langs:
  - csharp
  - vb
  name: ToggleRotation()
  nameWithType: AutoRotate.ToggleRotation()
  fullName: TirUtilities.Automation.AutoRotate.ToggleRotation()
  type: Method
  source:
    id: ToggleRotation
    path: ''
    startLine: 5891
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.Automation
  summary: 'Toggle rotation on/off. '
  example: []
  syntax:
    content: public void ToggleRotation()
    content.vb: Public Sub ToggleRotation
  overload: TirUtilities.Automation.AutoRotate.ToggleRotation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TirUtilities.Automation.AutoRotate.SetIsRotating(System.Boolean)
  commentId: M:TirUtilities.Automation.AutoRotate.SetIsRotating(System.Boolean)
  id: SetIsRotating(System.Boolean)
  parent: TirUtilities.Automation.AutoRotate
  langs:
  - csharp
  - vb
  name: SetIsRotating(Boolean)
  nameWithType: AutoRotate.SetIsRotating(Boolean)
  fullName: TirUtilities.Automation.AutoRotate.SetIsRotating(System.Boolean)
  type: Method
  source:
    id: SetIsRotating
    path: ''
    startLine: 5895
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.Automation
  summary: 'Set rotation state manually. '
  example: []
  syntax:
    content: public void SetIsRotating(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetIsRotating(value As Boolean)
  overload: TirUtilities.Automation.AutoRotate.SetIsRotating*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TirUtilities.Automation.AutoRotate.RotationAxis
  commentId: P:TirUtilities.Automation.AutoRotate.RotationAxis
  id: RotationAxis
  parent: TirUtilities.Automation.AutoRotate
  langs:
  - csharp
  - vb
  name: RotationAxis
  nameWithType: AutoRotate.RotationAxis
  fullName: TirUtilities.Automation.AutoRotate.RotationAxis
  type: Property
  source:
    id: RotationAxis
    path: ''
    startLine: 5902
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.Automation
  summary: 'Get/Set the axis that the transform rotates about. '
  example: []
  syntax:
    content: public AutoRotate.Axis RotationAxis { get; set; }
    parameters: []
    return:
      type: TirUtilities.Automation.AutoRotate.Axis
    content.vb: Public Property RotationAxis As AutoRotate.Axis
  overload: TirUtilities.Automation.AutoRotate.RotationAxis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TirUtilities.Automation.AutoRotate.IsRotating
  commentId: P:TirUtilities.Automation.AutoRotate.IsRotating
  id: IsRotating
  parent: TirUtilities.Automation.AutoRotate
  langs:
  - csharp
  - vb
  name: IsRotating
  nameWithType: AutoRotate.IsRotating
  fullName: TirUtilities.Automation.AutoRotate.IsRotating
  type: Property
  source:
    id: IsRotating
    path: ''
    startLine: 5905
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.Automation
  summary: 'True when transform should be rotating. '
  example: []
  syntax:
    content: public bool IsRotating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRotating As Boolean
  overload: TirUtilities.Automation.AutoRotate.IsRotating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TirUtilities.Automation
  commentId: N:TirUtilities.Automation
  name: TirUtilities.Automation
  nameWithType: TirUtilities.Automation
  fullName: TirUtilities.Automation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TirUtilities.Automation.AutoRotate.ToggleRotation*
  commentId: Overload:TirUtilities.Automation.AutoRotate.ToggleRotation
  name: ToggleRotation
  nameWithType: AutoRotate.ToggleRotation
  fullName: TirUtilities.Automation.AutoRotate.ToggleRotation
- uid: TirUtilities.Automation.AutoRotate.SetIsRotating*
  commentId: Overload:TirUtilities.Automation.AutoRotate.SetIsRotating
  name: SetIsRotating
  nameWithType: AutoRotate.SetIsRotating
  fullName: TirUtilities.Automation.AutoRotate.SetIsRotating
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TirUtilities.Automation.AutoRotate.RotationAxis*
  commentId: Overload:TirUtilities.Automation.AutoRotate.RotationAxis
  name: RotationAxis
  nameWithType: AutoRotate.RotationAxis
  fullName: TirUtilities.Automation.AutoRotate.RotationAxis
- uid: TirUtilities.Automation.AutoRotate.Axis
  commentId: T:TirUtilities.Automation.AutoRotate.Axis
  parent: TirUtilities.Automation
  name: AutoRotate.Axis
  nameWithType: AutoRotate.Axis
  fullName: TirUtilities.Automation.AutoRotate.Axis
- uid: TirUtilities.Automation.AutoRotate.IsRotating*
  commentId: Overload:TirUtilities.Automation.AutoRotate.IsRotating
  name: IsRotating
  nameWithType: AutoRotate.IsRotating
  fullName: TirUtilities.Automation.AutoRotate.IsRotating
