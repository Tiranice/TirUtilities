### YamlMime:ManagedReference
items:
- uid: TirUtilities.LevelManagment.LevelSystem
  commentId: T:TirUtilities.LevelManagment.LevelSystem
  id: LevelSystem
  parent: TirUtilities.LevelManagment
  children:
  - TirUtilities.LevelManagment.LevelSystem.Instance
  - TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
  - TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu
  langs:
  - csharp
  - vb
  name: LevelSystem
  nameWithType: LevelSystem
  fullName: TirUtilities.LevelManagment.LevelSystem
  type: Class
  source:
    id: LevelSystem
    path: ''
    startLine: 9519
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.LevelManagment
  summary: "\nHandles the loading of <xref href=\"TirUtilities.LevelManagment.LevelData\" data-throw-if-not-resolved=\"false\"></xref> emitted from <xref href=\"TirUtilities.Signals.LevelLoadSignal\" data-throw-if-not-resolved=\"false\"></xref>\nassets.\n"
  example: []
  syntax:
    content: 'public class LevelSystem : MonoBehaviour'
    content.vb: >-
      Public Class LevelSystem
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu
  commentId: M:TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu
  id: TryLoadMainMenu
  parent: TirUtilities.LevelManagment.LevelSystem
  langs:
  - csharp
  - vb
  name: TryLoadMainMenu()
  nameWithType: LevelSystem.TryLoadMainMenu()
  fullName: TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu()
  type: Method
  source:
    id: TryLoadMainMenu
    path: ''
    startLine: 9644
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.LevelManagment
  summary: 'Emits the main menu load signal if one is assigned. '
  example: []
  syntax:
    content: public bool TryLoadMainMenu()
    return:
      type: System.Boolean
      description: <code>false</code> if the main menu load signal is null.  Otherwise <code>true</code>.
    content.vb: Public Function TryLoadMainMenu As Boolean
  overload: TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TirUtilities.LevelManagment.LevelSystem.Instance
  commentId: P:TirUtilities.LevelManagment.LevelSystem.Instance
  id: Instance
  parent: TirUtilities.LevelManagment.LevelSystem
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: LevelSystem.Instance
  fullName: TirUtilities.LevelManagment.LevelSystem.Instance
  type: Property
  source:
    id: Instance
    path: ''
    startLine: 9656
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.LevelManagment
  syntax:
    content: public static LevelSystem Instance { get; }
    parameters: []
    return:
      type: TirUtilities.LevelManagment.LevelSystem
    content.vb: Public Shared ReadOnly Property Instance As LevelSystem
  overload: TirUtilities.LevelManagment.LevelSystem.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
  commentId: P:TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
  id: LevelLoadSignals
  parent: TirUtilities.LevelManagment.LevelSystem
  langs:
  - csharp
  - vb
  name: LevelLoadSignals
  nameWithType: LevelSystem.LevelLoadSignals
  fullName: TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
  type: Property
  source:
    id: LevelLoadSignals
    path: ''
    startLine: 9658
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.LevelManagment
  syntax:
    content: public IReadOnlyList<LevelLoadSignal> LevelLoadSignals { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{TirUtilities.Signals.LevelLoadSignal}
    content.vb: Public ReadOnly Property LevelLoadSignals As IReadOnlyList(Of LevelLoadSignal)
  overload: TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TirUtilities.LevelManagment.LevelData
  commentId: T:TirUtilities.LevelManagment.LevelData
  parent: TirUtilities.LevelManagment
  name: LevelData
  nameWithType: LevelData
  fullName: TirUtilities.LevelManagment.LevelData
- uid: TirUtilities.Signals.LevelLoadSignal
  commentId: T:TirUtilities.Signals.LevelLoadSignal
  name: LevelLoadSignal
  nameWithType: LevelLoadSignal
  fullName: TirUtilities.Signals.LevelLoadSignal
- uid: TirUtilities.LevelManagment
  commentId: N:TirUtilities.LevelManagment
  name: TirUtilities.LevelManagment
  nameWithType: TirUtilities.LevelManagment
  fullName: TirUtilities.LevelManagment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu*
  commentId: Overload:TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu
  name: TryLoadMainMenu
  nameWithType: LevelSystem.TryLoadMainMenu
  fullName: TirUtilities.LevelManagment.LevelSystem.TryLoadMainMenu
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TirUtilities.LevelManagment.LevelSystem.Instance*
  commentId: Overload:TirUtilities.LevelManagment.LevelSystem.Instance
  name: Instance
  nameWithType: LevelSystem.Instance
  fullName: TirUtilities.LevelManagment.LevelSystem.Instance
- uid: TirUtilities.LevelManagment.LevelSystem
  commentId: T:TirUtilities.LevelManagment.LevelSystem
  parent: TirUtilities.LevelManagment
  name: LevelSystem
  nameWithType: LevelSystem
  fullName: TirUtilities.LevelManagment.LevelSystem
- uid: TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals*
  commentId: Overload:TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
  name: LevelLoadSignals
  nameWithType: LevelSystem.LevelLoadSignals
  fullName: TirUtilities.LevelManagment.LevelSystem.LevelLoadSignals
- uid: System.Collections.Generic.IReadOnlyList{TirUtilities.Signals.LevelLoadSignal}
  commentId: T:System.Collections.Generic.IReadOnlyList{TirUtilities.Signals.LevelLoadSignal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<LevelLoadSignal>
  nameWithType: IReadOnlyList<LevelLoadSignal>
  fullName: System.Collections.Generic.IReadOnlyList<TirUtilities.Signals.LevelLoadSignal>
  nameWithType.vb: IReadOnlyList(Of LevelLoadSignal)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TirUtilities.Signals.LevelLoadSignal)
  name.vb: IReadOnlyList(Of LevelLoadSignal)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TirUtilities.Signals.LevelLoadSignal
    name: LevelLoadSignal
    nameWithType: LevelLoadSignal
    fullName: TirUtilities.Signals.LevelLoadSignal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TirUtilities.Signals.LevelLoadSignal
    name: LevelLoadSignal
    nameWithType: LevelLoadSignal
    fullName: TirUtilities.Signals.LevelLoadSignal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
