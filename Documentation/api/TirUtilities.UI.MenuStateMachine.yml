### YamlMime:ManagedReference
items:
- uid: TirUtilities.UI.MenuStateMachine
  commentId: T:TirUtilities.UI.MenuStateMachine
  id: MenuStateMachine
  parent: TirUtilities.UI
  children:
  - TirUtilities.UI.MenuStateMachine.ActivePage
  - TirUtilities.UI.MenuStateMachine.Back
  - TirUtilities.UI.MenuStateMachine.MenuPages
  - TirUtilities.UI.MenuStateMachine.PreviousPage
  - TirUtilities.UI.MenuStateMachine.TransitionTo(TirUtilities.UI.MenuState)
  langs:
  - csharp
  - vb
  name: MenuStateMachine
  nameWithType: MenuStateMachine
  fullName: TirUtilities.UI.MenuStateMachine
  type: Class
  source:
    id: MenuStateMachine
    path: ''
    startLine: 45436
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  summary: "\nControls the state of a set of <xref href=\"TirUtilities.UI.MenuPage\" data-throw-if-not-resolved=\"false\"></xref> objects in the scene.\n"
  example: []
  syntax:
    content: 'public class MenuStateMachine : StateMachine'
    content.vb: >-
      Public Class MenuStateMachine
          Inherits StateMachine
  inheritance:
  - System.Object
  - TirUtilities.StateMachine
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TirUtilities.UI.MenuStateMachine.ActivePage
  commentId: P:TirUtilities.UI.MenuStateMachine.ActivePage
  id: ActivePage
  parent: TirUtilities.UI.MenuStateMachine
  langs:
  - csharp
  - vb
  name: ActivePage
  nameWithType: MenuStateMachine.ActivePage
  fullName: TirUtilities.UI.MenuStateMachine.ActivePage
  type: Property
  source:
    id: ActivePage
    path: ''
    startLine: 45474
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  summary: 'Get the currently active page. '
  example: []
  syntax:
    content: public MenuPage ActivePage { get; }
    parameters: []
    return:
      type: TirUtilities.UI.MenuPage
    content.vb: Public ReadOnly Property ActivePage As MenuPage
  overload: TirUtilities.UI.MenuStateMachine.ActivePage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TirUtilities.UI.MenuStateMachine.PreviousPage
  commentId: P:TirUtilities.UI.MenuStateMachine.PreviousPage
  id: PreviousPage
  parent: TirUtilities.UI.MenuStateMachine
  langs:
  - csharp
  - vb
  name: PreviousPage
  nameWithType: MenuStateMachine.PreviousPage
  fullName: TirUtilities.UI.MenuStateMachine.PreviousPage
  type: Property
  source:
    id: PreviousPage
    path: ''
    startLine: 45477
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  summary: 'Get the last active page. '
  example: []
  syntax:
    content: public MenuPage PreviousPage { get; }
    parameters: []
    return:
      type: TirUtilities.UI.MenuPage
    content.vb: Public ReadOnly Property PreviousPage As MenuPage
  overload: TirUtilities.UI.MenuStateMachine.PreviousPage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TirUtilities.UI.MenuStateMachine.TransitionTo(TirUtilities.UI.MenuState)
  commentId: M:TirUtilities.UI.MenuStateMachine.TransitionTo(TirUtilities.UI.MenuState)
  id: TransitionTo(TirUtilities.UI.MenuState)
  parent: TirUtilities.UI.MenuStateMachine
  langs:
  - csharp
  - vb
  name: TransitionTo(MenuState)
  nameWithType: MenuStateMachine.TransitionTo(MenuState)
  fullName: TirUtilities.UI.MenuStateMachine.TransitionTo(TirUtilities.UI.MenuState)
  type: Method
  source:
    id: TransitionTo
    path: ''
    startLine: 45513
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  summary: 'Transitions the state machine to the given state. '
  example: []
  syntax:
    content: public void TransitionTo(MenuState state)
    parameters:
    - id: state
      type: TirUtilities.UI.MenuState
      description: ''
    content.vb: Public Sub TransitionTo(state As MenuState)
  overload: TirUtilities.UI.MenuStateMachine.TransitionTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TirUtilities.UI.MenuStateMachine.Back
  commentId: M:TirUtilities.UI.MenuStateMachine.Back
  id: Back
  parent: TirUtilities.UI.MenuStateMachine
  langs:
  - csharp
  - vb
  name: Back()
  nameWithType: MenuStateMachine.Back()
  fullName: TirUtilities.UI.MenuStateMachine.Back()
  type: Method
  source:
    id: Back
    path: ''
    startLine: 45533
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  summary: 'Go back to the previous page in the history. '
  example: []
  syntax:
    content: public void Back()
    content.vb: Public Sub Back
  overload: TirUtilities.UI.MenuStateMachine.Back*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TirUtilities.UI.MenuStateMachine.MenuPages
  commentId: P:TirUtilities.UI.MenuStateMachine.MenuPages
  id: MenuPages
  parent: TirUtilities.UI.MenuStateMachine
  langs:
  - csharp
  - vb
  name: MenuPages
  nameWithType: MenuStateMachine.MenuPages
  fullName: TirUtilities.UI.MenuStateMachine.MenuPages
  type: Property
  source:
    id: MenuPages
    path: ''
    startLine: 45548
  assemblies:
  - cs.temp.dll
  namespace: TirUtilities.UI
  syntax:
    content: public List<MenuPage> MenuPages { get; }
    parameters: []
    return:
      type: Global.List{TirUtilities.UI.MenuPage}
    content.vb: Public ReadOnly Property MenuPages As List(Of MenuPage)
  overload: TirUtilities.UI.MenuStateMachine.MenuPages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TirUtilities.UI.MenuPage
  commentId: T:TirUtilities.UI.MenuPage
  parent: TirUtilities.UI
  name: MenuPage
  nameWithType: MenuPage
  fullName: TirUtilities.UI.MenuPage
- uid: TirUtilities.UI
  commentId: N:TirUtilities.UI
  name: TirUtilities.UI
  nameWithType: TirUtilities.UI
  fullName: TirUtilities.UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TirUtilities.StateMachine
  commentId: T:TirUtilities.StateMachine
  parent: TirUtilities
  name: StateMachine
  nameWithType: StateMachine
  fullName: TirUtilities.StateMachine
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TirUtilities
  commentId: N:TirUtilities
  name: TirUtilities
  nameWithType: TirUtilities
  fullName: TirUtilities
- uid: TirUtilities.UI.MenuStateMachine.ActivePage*
  commentId: Overload:TirUtilities.UI.MenuStateMachine.ActivePage
  name: ActivePage
  nameWithType: MenuStateMachine.ActivePage
  fullName: TirUtilities.UI.MenuStateMachine.ActivePage
- uid: TirUtilities.UI.MenuStateMachine.PreviousPage*
  commentId: Overload:TirUtilities.UI.MenuStateMachine.PreviousPage
  name: PreviousPage
  nameWithType: MenuStateMachine.PreviousPage
  fullName: TirUtilities.UI.MenuStateMachine.PreviousPage
- uid: TirUtilities.UI.MenuStateMachine.TransitionTo*
  commentId: Overload:TirUtilities.UI.MenuStateMachine.TransitionTo
  name: TransitionTo
  nameWithType: MenuStateMachine.TransitionTo
  fullName: TirUtilities.UI.MenuStateMachine.TransitionTo
- uid: TirUtilities.UI.MenuState
  commentId: T:TirUtilities.UI.MenuState
  parent: TirUtilities.UI
  name: MenuState
  nameWithType: MenuState
  fullName: TirUtilities.UI.MenuState
- uid: TirUtilities.UI.MenuStateMachine.Back*
  commentId: Overload:TirUtilities.UI.MenuStateMachine.Back
  name: Back
  nameWithType: MenuStateMachine.Back
  fullName: TirUtilities.UI.MenuStateMachine.Back
- uid: TirUtilities.UI.MenuStateMachine.MenuPages*
  commentId: Overload:TirUtilities.UI.MenuStateMachine.MenuPages
  name: MenuPages
  nameWithType: MenuStateMachine.MenuPages
  fullName: TirUtilities.UI.MenuStateMachine.MenuPages
- uid: Global.List{TirUtilities.UI.MenuPage}
  commentId: '!:Global.List{TirUtilities.UI.MenuPage}'
  definition: Global.List`1
  name: List<MenuPage>
  nameWithType: List<MenuPage>
  fullName: List<TirUtilities.UI.MenuPage>
  nameWithType.vb: List(Of MenuPage)
  fullName.vb: List(Of TirUtilities.UI.MenuPage)
  name.vb: List(Of MenuPage)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TirUtilities.UI.MenuPage
    name: MenuPage
    nameWithType: MenuPage
    fullName: TirUtilities.UI.MenuPage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TirUtilities.UI.MenuPage
    name: MenuPage
    nameWithType: MenuPage
    fullName: TirUtilities.UI.MenuPage
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
